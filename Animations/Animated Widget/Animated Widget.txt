import 'package:flutter/material.dart';
import 'package:flutter/animation.dart';

void main(){
  runApp(new MaterialApp(
    home: MyApp(),
  ));
}

class MyApp extends StatefulWidget{
  @override
  _State createState()=> new _State();
}
class AnimationLogo extends AnimatedWidget{
  static final _opacityTween = new Tween<double>(begin: 0.1,end: 1.0);
  static final _sizeTween = new Tween<double>(begin: 100.0,end: 400.0);
  static final _rotateTween = new Tween<double>(begin: 0.0,end: 12.0);

  AnimationLogo({Key key,Animation<double> animation}): super(key:key,listenable:animation);

  Widget build(BuildContext context){
    final Animation<double> animation = listenable;
    return new Center(
      child: new Transform.rotate(angle: _rotateTween.evaluate(animation),
        child: new Opacity(opacity: _opacityTween.evaluate(animation),
          child: new Container(
            width: _sizeTween.evaluate(animation),
            height: _sizeTween.evaluate(animation),
            child: new FlutterLogo(),
          ),
        ),
      ),
    );

  }
}
class _State extends State<MyApp> with TickerProviderStateMixin{

  Animation animation;
  AnimationController controller;


  @override
  void initState() {
    super.initState();
    controller= new AnimationController(duration: const Duration(milliseconds: 5000),vsync: this);
    animation= new CurvedAnimation(parent: controller, curve: Curves.easeIn);

    animation.addStatusListener(listener);
    controller.forward();
  }
  void listener(AnimationStatus status){
    if(status == AnimationStatus.completed) controller.reverse();
    else if(status == AnimationStatus.dismissed) controller.forward();
  }

  @override
  Widget build(BuildContext context) {
    return new Scaffold(
      appBar: new AppBar(
        title: new Text("Name Here"),
      ),
      body: new Container(
        padding: new EdgeInsets.all(30.0),
        child: new AnimationLogo(animation: animation ,),
      ),
    );
  }
}